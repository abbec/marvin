name: Linux

on: [push]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - uses: cachix/install-nix-action@v3
    - name: Cache
      uses: actions/cache@v1
      with:
        path: ./.cache
        key: ${{ runner.os }}-cargo-build-cache-${{ hashFiles('**/Cargo.lock') }}
    - name: Install Prereqs
      run: nix-shell ./shell.nix --command exit
    - name: Build
      env:
        RUSTC_WRAPPER: sccache
        SCCACHE_CACHE_SIZE: "300M"
        CARGO_HOME: ./.cache/cargo
      run: |
        mkdir -p $PWD/.cache/cargo $PWD/.cache/target
        nix-shell ./shell.nix --run "SCCACHE_DIR=$PWD/.cache/target sccache --start-server && cargo build"
      
  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - uses: cachix/install-nix-action@v3
    - name: Cache
      uses: actions/cache@v1
      with:
        path: ./.cache
        key: ${{ runner.os }}-cargo-test-cache-${{ hashFiles('**/Cargo.lock') }}
    - name: Install Prereqs
      run: nix-shell ./shell.nix --command exit
    - name: Build
      env:
        RUSTC_WRAPPER: sccache
        SCCACHE_CACHE_SIZE: "300M"
        CARGO_HOME: ./.cache/cargo
      run: |
        mkdir -p $PWD/.cache/cargo $PWD/.cache/target
        nix-shell ./shell.nix --run "SCCACHE_DIR=$PWD/.cache/target sccache --start-server && cargo test"

  lint:
    name: Linting (Clippy and Rustfmt)
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - uses: cachix/install-nix-action@v3
    - name: Cache
      uses: actions/cache@v1
      with:
        path: ./.cache
        key: ${{ runner.os }}-cargo-lint-cache-${{ hashFiles('**/Cargo.lock') }}
    - name: Install Prereqs
      run: nix-shell ./shell.nix --command exit
    - name: Rustfmt
      env:
        RUSTC_WRAPPER: sccache
        SCCACHE_CACHE_SIZE: "300M"
        CARGO_HOME: ./.cache/cargo
      run: |
        mkdir -p $PWD/.cache/cargo $PWD/.cache/target
        nix-shell ./shell.nix --run "SCCACHE_DIR=$PWD/.cache/target sccache --start-server && cargo fmt -- --check"
    - name: Clippy
      env:
        RUSTC_WRAPPER: sccache
        CARGO_HOME: ./.cache/cargo
      run: |
        mkdir -p $PWD/.cache/cargo $PWD/.cache/target
        nix-shell ./shell.nix --run "cargo clippy"
